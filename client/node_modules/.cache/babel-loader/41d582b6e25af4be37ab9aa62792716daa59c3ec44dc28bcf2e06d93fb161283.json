{"ast":null,"code":"import { guestInstance, authInstance } from './index.js';\nimport { jwtDecode } from 'jwt-decode';\nexport const signup = async (email, password) => {\n  try {\n    const response = await guestInstance.post('user/signup', {\n      email,\n      password,\n      role: 'USER'\n    });\n    const token = response.data.token;\n    const user = jwtDecode(token);\n    localStorage.setItem('token', token);\n    return user;\n  } catch (e) {\n    alert(e.response.data.message);\n    return false;\n  }\n};\nexport const login = async (email, password) => {\n  try {\n    const response = await guestInstance.post('user/login', {\n      email,\n      password\n    });\n    const token = response.data.token;\n    const user = jwtDecode(token);\n    localStorage.setItem('token', token);\n    return user;\n  } catch (e) {\n    alert(e.response.data.message);\n    return false;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const check = async () => {\n  let userToken, userData;\n  try {\n    let userToken = localStorage.getItem('token');\n    // если в хранилище нет действительного токена\n    if (!userToken) {\n      return false;\n    }\n    // токен есть, надо проверить его подлинность\n    const response = await authInstance.get('user/check');\n    userToken = response.data.token;\n    userData = jwtDecode(userToken);\n    localStorage.setItem('token', userToken);\n    return userData;\n  } catch (e) {\n    localStorage.removeItem('token');\n    return false;\n  }\n};","map":{"version":3,"names":["guestInstance","authInstance","jwtDecode","signup","email","password","response","post","role","token","data","user","localStorage","setItem","e","alert","message","login","logout","removeItem","check","userToken","userData","getItem","get"],"sources":["F:/Shop/client/src/http/userAPI.js"],"sourcesContent":["import { guestInstance, authInstance } from './index.js'\r\nimport { jwtDecode } from 'jwt-decode'\r\n\r\nexport const signup = async (email, password) => {\r\n    try {\r\n        const response = await guestInstance.post('user/signup', {email, password, role: 'USER'})\r\n        const token = response.data.token\r\n        const user = jwtDecode(token)\r\n        localStorage.setItem('token', token)\r\n        return user\r\n    } catch (e) {\r\n        alert(e.response.data.message)\r\n        return false\r\n    }\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    try {\r\n        const response = await guestInstance.post('user/login', {email, password})\r\n        const token = response.data.token\r\n        const user = jwtDecode(token)\r\n        localStorage.setItem('token', token)\r\n        return user\r\n    } catch (e) {\r\n        alert(e.response.data.message)\r\n        return false\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n}\r\n\r\nexport const check = async () => {\r\n    let userToken, userData\r\n    try {\r\n        let userToken = localStorage.getItem('token')\r\n        // если в хранилище нет действительного токена\r\n        if (!userToken) {\r\n            return false\r\n        }\r\n        // токен есть, надо проверить его подлинность\r\n        const response = await authInstance.get('user/check')\r\n        userToken = response.data.token\r\n        userData = jwtDecode(userToken)\r\n        localStorage.setItem('token', userToken)\r\n        return userData\r\n    } catch(e) {\r\n        localStorage.removeItem('token')\r\n        return false\r\n    }\r\n}"],"mappings":"AAAA,SAASA,aAAa,EAAEC,YAAY,QAAQ,YAAY;AACxD,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC7C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,aAAa,CAACO,IAAI,CAAC,aAAa,EAAE;MAACH,KAAK;MAAEC,QAAQ;MAAEG,IAAI,EAAE;IAAM,CAAC,CAAC;IACzF,MAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAI,CAACD,KAAK;IACjC,MAAME,IAAI,GAAGT,SAAS,CAACO,KAAK,CAAC;IAC7BG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpC,OAAOE,IAAI;EACf,CAAC,CAAC,OAAOG,CAAC,EAAE;IACRC,KAAK,CAACD,CAAC,CAACR,QAAQ,CAACI,IAAI,CAACM,OAAO,CAAC;IAC9B,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOb,KAAK,EAAEC,QAAQ,KAAK;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,aAAa,CAACO,IAAI,CAAC,YAAY,EAAE;MAACH,KAAK;MAAEC;IAAQ,CAAC,CAAC;IAC1E,MAAMI,KAAK,GAAGH,QAAQ,CAACI,IAAI,CAACD,KAAK;IACjC,MAAME,IAAI,GAAGT,SAAS,CAACO,KAAK,CAAC;IAC7BG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpC,OAAOE,IAAI;EACf,CAAC,CAAC,OAAOG,CAAC,EAAE;IACRC,KAAK,CAACD,CAAC,CAACR,QAAQ,CAACI,IAAI,CAACM,OAAO,CAAC;IAC9B,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAM;EACxBN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;AACpC,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAIC,SAAS,EAAEC,QAAQ;EACvB,IAAI;IACA,IAAID,SAAS,GAAGT,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;IAC7C;IACA,IAAI,CAACF,SAAS,EAAE;MACZ,OAAO,KAAK;IAChB;IACA;IACA,MAAMf,QAAQ,GAAG,MAAML,YAAY,CAACuB,GAAG,CAAC,YAAY,CAAC;IACrDH,SAAS,GAAGf,QAAQ,CAACI,IAAI,CAACD,KAAK;IAC/Ba,QAAQ,GAAGpB,SAAS,CAACmB,SAAS,CAAC;IAC/BT,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEQ,SAAS,CAAC;IACxC,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAMR,CAAC,EAAE;IACPF,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO,KAAK;EAChB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}