{"ast":null,"code":"import { guestInstance, authInstance } from './index.js';\n\n/*\r\n * Создание, обновление и удаление категории, получение списка всех категорий\r\n */\nexport const createCategory = async category => {\n  const {\n    data\n  } = await authInstance.post('category/create', category);\n  return data;\n};\nexport const updateCategory = async (id, category) => {\n  const {\n    data\n  } = await authInstance.put(`category/update/${id}`, category);\n  return data;\n};\nexport const deleteCategory = async id => {\n  const {\n    data\n  } = await authInstance.delete(`category/delete/${id}`);\n  return data;\n};\nexport const fetchCategories = async () => {\n  const {\n    data\n  } = await guestInstance.get('category/getall');\n  return data;\n};\n\n/*\r\n * Создание, обновление и удаление бренда, получение списка всех брендов\r\n */\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await authInstance.post('brand/create', brand);\n  return data;\n};\nexport const updateBrand = async (id, brand) => {\n  const {\n    data\n  } = await authInstance.put(`brand/update/${id}`, brand);\n  return data;\n};\nexport const deleteBrand = async id => {\n  const {\n    data\n  } = await authInstance.delete(`brand/delete/${id}`);\n  return data;\n};\nexport const fetchBrands = async () => {\n  const {\n    data\n  } = await guestInstance.get('brand/getall');\n  return data;\n};\n\n/*\r\n * Создание, обновление и удаление товара, получение списка всех товаров\r\n */\nexport const createProduct = async product => {\n  const {\n    data\n  } = await authInstance.post('product/create', product);\n  return data;\n};\nexport const updateProduct = async (id, product) => {\n  const {\n    data\n  } = await authInstance.put(`product/update/${id}`, product);\n  return data;\n};\nexport const deleteProduct = async id => {\n  const {\n    data\n  } = await authInstance.delete(`product/delete/${id}`);\n  return data;\n};\nexport const fetchAllProducts = async (categoryId, brandId, page, limit) => {\n  let url = 'product/getall';\n  // фильтрация товаров по категории и/или бренду\n  if (categoryId) url = url + '/categoryId/' + categoryId;\n  if (brandId) url = url + '/brandId/' + brandId;\n  const {\n    data\n  } = await guestInstance.get(url, {\n    params: {\n      // GET-параметры для постраничной навигации\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneProduct = async id => {\n  const {\n    data\n  } = await guestInstance.get(`product/getone/${id}`);\n  return data;\n};\nexport const fetchProdRating = async id => {\n  const {\n    data\n  } = await guestInstance.get(`rating/product/${id}`);\n  return data;\n};","map":{"version":3,"names":["guestInstance","authInstance","createCategory","category","data","post","updateCategory","id","put","deleteCategory","delete","fetchCategories","get","createBrand","brand","updateBrand","deleteBrand","fetchBrands","createProduct","product","updateProduct","deleteProduct","fetchAllProducts","categoryId","brandId","page","limit","url","params","fetchOneProduct","fetchProdRating"],"sources":["F:/Shop/client/src/http/catalogAPI.js"],"sourcesContent":["import { guestInstance, authInstance } from './index.js'\r\n\r\n/*\r\n * Создание, обновление и удаление категории, получение списка всех категорий\r\n */\r\nexport const createCategory = async (category) => {\r\n    const { data } = await authInstance.post('category/create', category)\r\n    return data\r\n}\r\n\r\nexport const updateCategory = async (id, category) => {\r\n    const { data } = await authInstance.put(`category/update/${id}`, category)\r\n    return data\r\n}\r\n\r\nexport const deleteCategory = async (id) => {\r\n    const { data } = await authInstance.delete(`category/delete/${id}`)\r\n    return data\r\n}\r\n\r\nexport const fetchCategories = async () => {\r\n    const { data } = await guestInstance.get('category/getall')\r\n    return data\r\n}\r\n\r\n/*\r\n * Создание, обновление и удаление бренда, получение списка всех брендов\r\n */\r\nexport const createBrand = async (brand) => {\r\n    const { data } = await authInstance.post('brand/create', brand)\r\n    return data\r\n}\r\n\r\nexport const updateBrand = async (id, brand) => {\r\n    const { data } = await authInstance.put(`brand/update/${id}`, brand)\r\n    return data\r\n}\r\n\r\nexport const deleteBrand = async (id) => {\r\n    const { data } = await authInstance.delete(`brand/delete/${id}`)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const { data } = await guestInstance.get('brand/getall')\r\n    return data\r\n}\r\n\r\n/*\r\n * Создание, обновление и удаление товара, получение списка всех товаров\r\n */\r\nexport const createProduct = async (product) => {\r\n    const { data } = await authInstance.post('product/create', product)\r\n    return data\r\n}\r\n\r\nexport const updateProduct = async (id, product) => {\r\n    const { data } = await authInstance.put(`product/update/${id}`, product)\r\n    return data\r\n}\r\n\r\nexport const deleteProduct = async (id) => {\r\n    const { data } = await authInstance.delete(`product/delete/${id}`)\r\n    return data\r\n}\r\n\r\nexport const fetchAllProducts = async (categoryId, brandId, page, limit) => {\r\n    let url = 'product/getall'\r\n    // фильтрация товаров по категории и/или бренду\r\n    if (categoryId) url = url + '/categoryId/' + categoryId\r\n    if (brandId) url = url + '/brandId/' + brandId\r\n    const { data } = await guestInstance.get(\r\n        url,\r\n        {params: { // GET-параметры для постраничной навигации\r\n            page, limit\r\n        }\r\n    })\r\n    return data\r\n}\r\n\r\nexport const fetchOneProduct = async (id) => {\r\n    const { data } = await guestInstance.get(`product/getone/${id}`)\r\n    return data\r\n}\r\n\r\nexport const fetchProdRating = async (id) => {\r\n    const { data } = await guestInstance.get(`rating/product/${id}`)\r\n    return data\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}